function assert(e,t){if(!e){var n="";throw assert.caller&&assert.caller.name&&(n=assert.caller.name+": "),n+=t,new Error(n)}}function hideAndShow(){function e(){return Date.now()-c<l?!1:(c=Date.now(),!0)}function t(){return window.innerWidth<=768}function n(){document.body.classList.add(i)}function o(){document.body.classList.remove(i)}var r=document.querySelector(".js-navbar-toggle-button"),a=document.querySelector(".navbar"),i="show-navbar",l=100,c=Date.now();r.addEventListener("mouseenter",function(){!t()&&e()&&n()}),a.addEventListener("mouseleave",function(){!t()&&e()&&o()})}function activeButton(e){var t=void 0,n=void 0,o=document.querySelector(".navigation-buttons");if(e&&(t=e,t=CSS.escape(t),n=o.querySelector("[name="+t+"]")),n||"object"!==("undefined"==typeof PAGE_INFO?"undefined":babelHelpers["typeof"](PAGE_INFO))||"string"!=typeof PAGE_INFO.name||(t=PAGE_INFO.name,t=CSS.escape(t),n=o.querySelector("[name="+t+"]")),!n){var r=location.pathname,a=/\/([^\.]+)(?:\..*)?$/,i=r.match(a)||[];t=i[1],t=CSS.escape(t),n=o.querySelector("[name="+t+"]")}if(n){assert(n,"Error finding navbar's active button.");var l=o.querySelectorAll("li");assert(l&&l.length>0,"No navigation buttons found"),l=Array.from(l);var c=!0,u=!1,s=void 0;try{for(var d,v=l[Symbol.iterator]();!(c=(d=v.next()).done);c=!0){var f=d.value;if(f.querySelector(".navbar-button")){var m=l.indexOf(f);l.splice(m,1)}}}catch(h){u=!0,s=h}finally{try{!c&&v["return"]&&v["return"]()}finally{if(u)throw s}}new ActiveHighlighter({buttons:l,activeIndex:l.indexOf(n),highlightOnClick:!0})}}function initSearchBarToggle(){function e(){i.classList.add(u),document.body.addEventListener("click",n)}function t(){i.classList.remove(u),document.body.removeEventListener("click",n)}function n(e){var n=c.getBoundingClientRect(),o=e.clientX<n.right&&e.clientX>n.left,r=e.clientY<n.bottom&&e.clientY>n.top;r&&o||t()}var o=".website-search",r=document.querySelector(o);assert(r&&r.nodeName,"No search button found.");var a=".navbar-container",i=document.querySelector(a);assert(i&&i.nodeName,"No navbar container found.");var l=".navbar-dropdown-search",c=document.querySelector(l);assert(c&&c.nodeName,"No navbar dropdown found.");var u="dropdown-search-open";r.addEventListener("click",function(n){i.classList.contains(u)?t():(n.stopPropagation(),e())})}function initSearchBarButtons(){var e=".js-navbar-dropdown-search",t=document.querySelector(e);assert(t&&t.nodeName,"No search form found.");var n=".js-navbar-dropdow-search-rent-btn",o="/rent",r=document.querySelector(n);assert(r&&r.nodeName,"No rent button found."),r.addEventListener("click",function(){t.action=o,t.submit()})}function controlNavbar(e){hideAndShow(),activeButton(e),initSearchBarToggle(),initSearchBarButtons()}var babelHelpers={};babelHelpers["typeof"]="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},babelHelpers.classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},babelHelpers.createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();var Highlight=function(){function e(t){babelHelpers.classCallCheck(this,e),this.setActive(t)}return babelHelpers.createClass(e,[{key:"translateX",value:function(e){assert("number"==typeof e,"translateX value is not a number"),this.bar.style.transform="translate3d("+e+"px, 0, 0)"}},{key:"setWidth",value:function(e){assert("number"==typeof e,"translateX value is not a number"),this.bar.style.width=e+"px"}},{key:"getBaseXPosition",value:function(){var e=this.parent.getBoundingClientRect();return e.left}},{key:"returnToBasePosition",value:function(){this.translateX(0);var e=this.parent.getBoundingClientRect(),t=e.right-e.left;this.setWidth(t)}},{key:"moveToElementPosition",value:function(e){var t=this.getBaseXPosition(),n=e.getBoundingClientRect(),o=n.left-t;this.translateX(o);var r=n.right-n.left;this.setWidth(r)}},{key:"setActive",value:function(e){this.bar&&(this.bar.remove(),this.bar=null),assert(e&&e.nodeName,"Invalid element passed to setActive"),this.parent=e,this.bar=document.createElement("div"),this.bar.classList.add("active-highlight"),this.parent.appendChild(this.bar)}}]),e}(),ActiveHighlighter=function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=t.buttons,o=t.activeIndex,r=void 0===o?0:o,a=t.highlightOnClick,i=void 0===a?!1:a;babelHelpers.classCallCheck(this,e);var l=void 0,c=void 0;if(n.nodeName)l=Array.from(n.children),c=n;else{if(!n.length)throw new Error("Invalid element send to ActiveHighlighter.");l=Array.from(n),c=l[0].parentElement}var u=new Highlight(l[r]);c.addEventListener("mouseleave",function(e){var t=c.getBoundingClientRect(),n=e.pageX>t.right||e.pageX<t.left,o=e.pageY>t.bottom||e.pageY<t.top,r=n||o;r&&u.returnToBasePosition()});var s=!0,d=!1,v=void 0;try{for(var f,m=function(){var e=f.value;e.addEventListener("mouseenter",function(){u.moveToElementPosition(e)})},h=l[Symbol.iterator]();!(s=(f=h.next()).done);s=!0)m()}catch(b){d=!0,v=b}finally{try{!s&&h["return"]&&h["return"]()}finally{if(d)throw v}}if(i){var p=!0,y=!1,g=void 0;try{for(var w,A=function(){var e=w.value;e.addEventListener("click",function(){u.setActive(e)})},E=l[Symbol.iterator]();!(p=(w=E.next()).done);p=!0)A()}catch(b){y=!0,g=b}finally{try{!p&&E["return"]&&E["return"]()}finally{if(y)throw g}}}},Elevator=function(e){"use strict";function t(e,t,n,o){return e/=o/2,1>e?n/2*e*e+t:(e--,-n/2*(e*(e-2)-1)+t)}function n(e,t){for(var n in t){var o=void 0===e[n]&&"function"!=typeof n;o&&(e[n]=t[n])}return e}function o(e){for(var t=0;e;)t+=e.offsetTop||0,e=e.offsetParent;return t}function r(e){w||(w=e);var n=e-w,o=t(n,A,E-A,y);window.scrollTo(0,o),y>n?p=requestAnimationFrame(r):c()}function a(){return window.requestAnimationFrame&&window.Audio&&window.addEventListener}function i(){w=null,A=null,C=!1}function l(){S&&(E=o(S))}function c(){i(),f&&(f.pause(),f.currentTime=0),m&&m.play(),h&&h()}function u(){C&&(cancelAnimationFrame(p),i(),f&&(f.pause(),f.currentTime=0),l(),window.scrollTo(0,E))}function s(e){e.addEventListener?e.addEventListener("click",k.elevate,!1):e.attachEvent("onclick",function(){l(),document.documentElement.scrollTop=E,document.body.scrollTop=E,window.scroll(0,E)})}function d(e){b=document.body;var t={duration:void 0,mainAudio:!1,endAudio:!1,preloadAudio:!0,loopAudio:!0,startCallback:null,endCallback:null};e=n(e,t),e.element&&s(e.element),a()&&(e.duration&&(g=!0,y=e.duration),e.targetElement&&(S=e.targetElement),window.addEventListener("blur",u,!1),e.mainAudio&&(f=new Audio(e.mainAudio),f.setAttribute("preload",e.preloadAudio),f.setAttribute("loop",e.loopAudio)),e.endAudio&&(m=new Audio(e.endAudio),m.setAttribute("preload","true")),e.endCallback&&(h=e.endCallback),e.startCallback&&(v=e.startCallback))}var v,f,m,h,b=null,p=null,y=null,g=!1,w=null,A=null,E=0,S=null,C=!1,k=this;this.elevate=function(){C||(C=!0,A=document.documentElement.scrollTop||b.scrollTop,l(),g||(y=1.5*Math.abs(E-A)),requestAnimationFrame(r),f&&f.play(),v&&v())},d(e)};controlNavbar(),window.elevator=Elevator;
//# sourceMappingURL=data:application/json;base64,
