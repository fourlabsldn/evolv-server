{"version":3,"names":[],"mappings":"","sources":["search/search.js"],"sourcesContent":["import MakeArg from '../_shared/MakeArg';\nimport MapController from './_MapController.js';\nimport SearchController from './_SearchController.js';\n\n// Global values\nconst SEARCH_BAR_SELECTOR = '.search-bar';\nconst MAP_TARGET_SELECTOR = '.js-property-map';\nconst TILES_LIST_CONTAINER_SELECTOR = '.js-property-list';\nconst SEARCH_INPUT_SELECTOR = '.js-search-input';\nconst SEARCH_INFO_SELECTOR = '.js-search-info';\n\n/**\n * Display properties on the map\n * @function showOnMap\n * @param  {Array} coordinates Each item in the 'coordinate' array\n *                 must have a 'latitude' and a 'longitude' property\n * @param  {Object} mapController\n * @return {void}\n */\nfunction showOnMap(coordinates, mapController) {\n  mapController.createMarkersFromCoordinates(coordinates);\n  mapController.createCluster();\n}\n\n\nfunction fillSearchFromQueryParameters(searchController) {\n  const Arg = MakeArg(); // eslint-disable-line new-cap\n  const getParameters = Arg.all();\n  const getParametersKeys = Object.keys(getParameters);\n\n  for (const par of getParametersKeys) {\n    const filter = searchController.getFilterByCriterion(par);\n    if (filter) {\n      let value = getParameters[par];\n      value = (typeof value === 'string') ? value : value.toString();\n      searchController.fillFilter(filter, value);\n    }\n  }\n\n\n  // Now we apply the filter.\n  searchController.applyFilters();\n}\n\n\nfunction initPage() {\n  // Start control of search bar\n  const searchControllerConfig = {\n    searchBarSelector: SEARCH_BAR_SELECTOR,\n    searchFieldsSelector: SEARCH_INPUT_SELECTOR,\n    targetsContainerSelector: TILES_LIST_CONTAINER_SELECTOR,\n    infoElSelector: SEARCH_INFO_SELECTOR,\n    // filter applied callback\n    filtersAppliedcallback: (matches) => {\n      const coordinates = [];\n      for (const tile of matches) {\n        if (!tile.dataset.longitude || !tile.dataset.latitude) {\n          continue;\n        }\n\n        coordinates.push({\n          latitude: tile.dataset.latitude,\n          longitude: tile.dataset.longitude\n        });\n      }\n\n      showOnMap(coordinates, mapController);\n    }\n  };\n\n  const searchController = new SearchController(searchControllerConfig);\n\n  // Create map and instantiate a controller\n  const mapController = new MapController(MAP_TARGET_SELECTOR);\n\n  fillSearchFromQueryParameters(searchController, mapController);\n}\n\ninitPage();\n"],"file":"search/search.js","sourceRoot":"/source/"}