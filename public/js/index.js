function assert(e,t){if(!e){var n="";throw assert.caller&&assert.caller.name&&(n=assert.caller.name+": "),n+=t,new Error(n)}}var babelHelpers={};babelHelpers["typeof"]="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},babelHelpers.classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},babelHelpers.createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var Highlight=function(){function e(t){babelHelpers.classCallCheck(this,e),this.setActive(t)}return babelHelpers.createClass(e,[{key:"translateX",value:function(e){assert("number"==typeof e,"translateX value is not a number"),this.bar.style.transform="translate3d("+e+"px, 0, 0)"}},{key:"setWidth",value:function(e){assert("number"==typeof e,"translateX value is not a number"),this.bar.style.width=e+"px"}},{key:"getBaseXPosition",value:function(){var e=this.parent.getBoundingClientRect();return e.left}},{key:"returnToBasePosition",value:function(){this.translateX(0);var e=this.parent.getBoundingClientRect(),t=e.right-e.left;this.setWidth(t)}},{key:"moveToElementPosition",value:function(e){var t=this.getBaseXPosition(),n=e.getBoundingClientRect(),i=n.left-t;this.translateX(i);var r=n.right-n.left;this.setWidth(r)}},{key:"setActive",value:function(e){this.bar&&(this.bar.remove(),this.bar=null),assert(e&&e.nodeName,"Invalid element passed to setActive"),this.parent=e,this.bar=document.createElement("div"),this.bar.classList.add("active-highlight"),this.parent.appendChild(this.bar)}}]),e}(),ActiveHighlighter=function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=t.buttons,i=t.activeIndex,r=void 0===i?0:i,a=t.highlightOnClick,l=void 0===a?!1:a;babelHelpers.classCallCheck(this,e);var o=void 0,s=void 0;if(n.nodeName)o=Array.from(n.children),s=n;else{if(!n.length)throw new Error("Invalid element send to ActiveHighlighter.");o=Array.from(n),s=o[0].parentElement}var c=new Highlight(o[r]);s.addEventListener("mouseleave",function(e){var t=s.getBoundingClientRect(),n=e.pageX>t.right||e.pageX<t.left,i=e.pageY>t.bottom||e.pageY<t.top,r=n||i;r&&c.returnToBasePosition()});var u=!0,h=!1,v=void 0;try{for(var f,b=function(){var e=f.value;e.addEventListener("mouseenter",function(){c.moveToElementPosition(e)})},d=o[Symbol.iterator]();!(u=(f=d.next()).done);u=!0)b()}catch(g){h=!0,v=g}finally{try{!u&&d["return"]&&d["return"]()}finally{if(h)throw v}}if(l){var y=!0,m=!1,p=void 0;try{for(var C,k=function(){var e=C.value;e.addEventListener("click",function(){c.setActive(e)})},w=o[Symbol.iterator]();!(y=(C=w.next()).done);y=!0)k()}catch(g){m=!0,p=g}finally{try{!y&&w["return"]&&w["return"]()}finally{if(m)throw p}}}},buttons=document.querySelectorAll(".tab-label"),activeIndex=0,highlightOnClick=!0;new ActiveHighlighter({buttons:buttons,activeIndex:activeIndex,highlightOnClick:highlightOnClick});
//# sourceMappingURL=data:application/json;base64,
